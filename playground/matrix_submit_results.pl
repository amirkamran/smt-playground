#!/usr/bin/env perl
# Submits WMT 2012 test results to http://matrix.statmt.org/.
# Copyright Â© 2012 Dan Zeman <zeman@ufal.mff.cuni.cz>
# License: GNU GPL

use utf8;
sub usage
{
    print STDERR ("Usage: matrix_submit_results.pl  -usr <user> -psw <password> -src en -tgt cs -step <s.evaluator>\n");
    print STDERR ("Options (mandatory unless stated otherwise):\n");
    print STDERR ("       -usr: user name for matrix.statmt.org\n");
    print STDERR ("       -psw: password\n");
    print STDERR ("       -src: source language (cs|de|en|es|fr)\n");
    print STDERR ("       -tgt: target language (cs|de|en|es|fr)\n");
    print STDERR ("       -step: evaluator step name, e.g. s.evaluator.ae50eee8.20120303-2156\n");
    print STDERR ("              presubmit.sh must be run on that step first.\n");
    print STDERR ("              sysout.\$tgt.sgml and sysout.\$tgt.normalized.sgml files are expected to be there.\n");
    print STDERR ("       -notes: notes about this system run (will be appended to default notes generated by this script)\n");
}
use open ':utf8';
binmode(STDIN, ':utf8');
binmode(STDOUT, ':utf8');
binmode(STDERR, ':utf8');
use Carp;
use Getopt::Long;
use dzsys;
use htmlform;

GetOptions
(
    'usr=s' => \$konfig{uzivatel},
    'psw=s' => \$konfig{heslo},
    'src=s' => \$konfig{src},
    'tgt=s' => \$konfig{tgt},
    'step=s' => \$konfig{step},
    'notes=s' => \$konfig{notes}
);
if(!$konfig{uzivatel} || !$konfig{heslo} || !$konfig{step} || !$konfig{src} || !$konfig{tgt})
{
    usage();
    confess("Unknown user, password, step, source or target language");
}
if(! -f "$konfig{step}/sysout.$konfig{tgt}.sgml")
{
    confess("File $konfig{step}/sysout.$konfig{tgt}.sgml not found");
}
if(! -f "$konfig{step}/sysout.$konfig{tgt}.normalized.sgml")
{
    confess("File $konfig{step}/sysout.$konfig{tgt}.normalized.sgml not found");
}
# Get tags of the step.
my $tag = dzsys::chompticks("eman tag $konfig{step}");
$tag =~ s/^$konfig{step}\s+//;
if($tag =~ m/A:(SRCAUG=\S+)/)
{
    $tag = $1;
}
# Get our score of the output (usually higher than the official score because they use different tokenization).
my $score;
if(-f "$konfig{step}/scores")
{
    $score = dzsys::chompticks("cat $konfig{step}/scores");
}

# Create web client.
my $ua = htmlform::vytvorit_klienta();
# Download the login page.
print STDERR ("Log in...\n");
my $url = 'http://matrix.statmt.org/account/login';
my $response = $ua->get($url);
if(!$response->is_success())
{
    print STDERR ("Cannot log in.\n");
    print STDERR ("URL = $url\n");
    confess;
}
my $html = $response->content();
my $formular = htmlform::precist_formular($html);
htmlform::nastavit_hodnotu($formular, 'login', $konfig{uzivatel});
htmlform::nastavit_hodnotu($formular, 'password', $konfig{heslo});
my $podvoj = htmlform::ziskat_pole_dvojic($formular, 'Log in');
$response = htmlform::post($ua, $url, $podvoj, 'application/x-www-form-urlencoded');
# Submission starts here.
# Note that the language pair codes are probably specific to newstest2012.
# More importantly, note that the system ids known to this script all belong to Dan.
my %ids = # testset id, system id
(
    'de-en' => [1692, 1792],
    'de-es' => [1693],
    'de-fr' => [1694],
    'de-cs' => [1695, 1791],
    'en-de' => [1696, 1794],
    'en-es' => [1697, 1795],
    'en-fr' => [1698, 1796],
    'en-cs' => [1699, 1793],
    'es-de' => [1700],
    'es-en' => [1701, 1798],
    'es-fr' => [1702],
    'es-cs' => [1703, 1797],
    'fr-de' => [1704],
    'fr-en' => [1705, 1800],
    'fr-es' => [1706],
    'fr-cs' => [1707, 1799],
    'cs-de' => [1708, 1787],
    'cs-en' => [1709, 1788],
    'cs-es' => [1710, 1789],
    'cs-fr' => [1711, 1790]
);
my $pair = "$konfig{src}-$konfig{tgt}";
confess("Unknown language pair $pair") unless($ids{$pair} && $ids{$pair}[1]);
print STDERR ("Selecting test set and system (probably superfluous operation)...\n");
$response = $ua->get('http://matrix.statmt.org/submission');
$html = $response->content();
$formular = htmlform::precist_formular($html);
print STDERR ("Selecting test set newstest2012 $pair...\n");
htmlform::nastavit_hodnotu($formular, 'test_set[id]', 16); # newstest2012
htmlform::nastavit_hodnotu($formular, 'test_setup[16]', $ids{$pair}[0]);
print STDERR ("Selecting system uk-dan-moses $pair...\n");
htmlform::nastavit_hodnotu($formular, 'system[id]', $ids{$pair}[1]);
$podvoj = htmlform::ziskat_pole_dvojic($formular, 'Continue');
print STDERR ("Posting form data to http://matrix.statmt.org/submission/upload...\n");
$response = htmlform::post($ua, 'http://matrix.statmt.org/submission/upload', $podvoj, 'application/x-www-form-urlencoded');
$response->is_success() or confess();
$html_empty_submission = $response->content();
print STDERR ("Post request suceeded.\n");
print STDERR ("Now the actual SGML files...\n");
foreach my $normalized (0, 1)
{
    $formular = htmlform::precist_formular($html_empty_submission);
    htmlform::nastavit_hodnotu($formular, 'run[test_setup_id]', $ids{$pair}[0]);
    htmlform::nastavit_hodnotu($formular, 'run[system_id]', $ids{$pair}[1]);
    my $filerecord = $formular->{hash}{'run[file_sgm]'}[-1];
    $filerecord->{filetype} = 'text/xml';
    if($normalized)
    {
        $filerecord->{filename} = "$konfig{step}/sysout.$konfig{tgt}.normalized.sgml";
        $filerecord->{value} = dzsys::safeticks("cat $filerecord->{filename}");
        my $notes = "secondary; not for manual evaluation; normalized; constrained; $konfig{step}; $tag";
        $notes .= "; $konfig{notes}" if($konfig{notes});
        $notes .= "; $score" if($score);
        htmlform::nastavit_hodnotu($formular, 'run[notes]', $notes);
    }
    else
    {
        $filerecord->{filename} = "$konfig{step}/sysout.$konfig{tgt}.sgml";
        $filerecord->{value} = dzsys::safeticks("cat $filerecord->{filename}");
        my $notes = "primary; unnormalized; constrained; $konfig{step}; $tag";
        $notes .= "; $konfig{notes}" if($konfig{notes});
        $notes .= "; $score" if($score);
        htmlform::nastavit_hodnotu($formular, 'run[notes]', $notes);
    }
    $podvoj = htmlform::ziskat_pole_dvojic($formular, 'Save Run');
    print STDERR ("Posting form data to http://matrix.statmt.org/submission/create...\n");
    $response = htmlform::post($ua, 'http://matrix.statmt.org/submission/create', $podvoj, 'multipart/form-data');
    $response->is_success() or $response->status_line() =~ m/^302/ or confess();
    print STDERR ("Post request suceeded.\n");
}
print STDERR ("See http://matrix.statmt.org/runs/list.\n");
