#!/usr/bin/env perl
# Submits WMT 2012 test results to http://matrix.statmt.org/.
# Copyright Â© 2012 Dan Zeman <zeman@ufal.mff.cuni.cz>
# License: GNU GPL

use utf8;
sub usage
{
    print STDERR ("Usage: matrix_submit_results.pl  -usr <user> -psw <password> -step <s.evaluator>\n");
    print STDERR ("Options (mandatory unless stated otherwise):\n");
    print STDERR ("       -usr: user name for matrix.statmt.org\n");
    print STDERR ("       -psw: password\n");
    print STDERR ("       -step: evaluator step name, e.g. s.evaluator.ae50eee8.20120303-2156\n");
    print STDERR ("              presubmit.pl must be run on that step first.\n");
    print STDERR ("              \$src and \$tgt languages will be determined automatically from the step tags.\n");
    print STDERR ("              sysout.\$tgt.sgml and sysout.\$tgt.normalized.sgml files are expected to be there.\n");
    print STDERR ("       -notes: notes about this system run (will be appended to default notes generated by this script)\n");
}
use open ':utf8';
binmode(STDIN, ':utf8');
binmode(STDOUT, ':utf8');
binmode(STDERR, ':utf8');
use Carp;
use Getopt::Long;
use dzsys;
use htmlform;
use cas;

GetOptions
(
    'usr=s' => \$konfig{uzivatel},
    'psw=s' => \$konfig{heslo},
    'step=s' => \$konfig{step},
    'notes=s' => \$konfig{notes}
);
if(!$konfig{uzivatel} || !$konfig{heslo} || !$konfig{step})
{
    usage();
    confess("Unknown user, password, step, source or target language");
}
# Read the eman tags of the evaluator step and determine the language pair.
($dummy, $tags) = split(/\t/, dzsys::chompticks("eman tag $konfig{step}"));
@tags = split(/\s+/, $tags);
foreach my $tag (@tags)
{
    if($tag =~ m/^S:(.+)$/)
    {
        $src = $1;
    }
    elsif($tag =~ m/^T:(.+)$/)
    {
        $tgt = $1;
    }
}
if(!defined($src) || !defined($tgt))
{
    print STDERR ("$tags\n");
    confess("Could not determine the language pair from the tags of the step $konfig{step}");
}
if(! -f "$konfig{step}/sysout.$tgt.sgml")
{
    confess("File $konfig{step}/sysout.$tgt.sgml not found");
}
if(! -f "$konfig{step}/sysout.$tgt.normalized.sgml")
{
    confess("File $konfig{step}/sysout.$tgt.normalized.sgml not found");
}
# Get our score of the output (usually higher than the official score because they use different tokenization).
my $score;
if(-f "$konfig{step}/scores")
{
    $score = dzsys::chompticks("cat $konfig{step}/scores");
}

# Create web client.
my $ua = htmlform::vytvorit_klienta();
# Download the login page.
print STDERR ("Log in...\n");
my $url = 'http://matrix.statmt.org/account/login';
my $response = $ua->get($url);
if(!$response->is_success())
{
    print STDERR ("Cannot log in.\n");
    print STDERR ("URL = $url\n");
    confess;
}
my $html = $response->content();
my $formular = htmlform::precist_formular($html);
htmlform::nastavit_hodnotu($formular, 'login', $konfig{uzivatel});
htmlform::nastavit_hodnotu($formular, 'password', $konfig{heslo});
my $podvoj = htmlform::ziskat_pole_dvojic($formular, 'Log in');
$response = htmlform::post($ua, $url, $podvoj, 'application/x-www-form-urlencoded');
# Submission starts here.
# Note that the language pair codes are probably specific to newstest2013.
# More importantly, note that the system ids known to this script all belong to Dan (system cu-zeman).
my %ids = # testset id, system id
(
    'de-en' => [1712, 1895],
    'de-es' => [1713],
    'de-fr' => [1714],
    'de-cs' => [1715, 1894],
    'de-ru' => [1716],
    'en-de' => [1717, 1897],
    'en-es' => [1718, 1898],
    'en-fr' => [1719, 1899],
    'en-cs' => [1720, 1896],
    'en-ru' => [1721, 1900],
    'es-de' => [1722],
    'es-en' => [1723, 1902],
    'es-fr' => [1724],
    'es-cs' => [1725, 1901],
    'es-ru' => [1726],
    'fr-de' => [1727],
    'fr-en' => [1728, 1904],
    'fr-es' => [1729],
    'fr-cs' => [1730, 1903],
    'fr-ru' => [1731],
    'cs-de' => [1732, 1889],
    'cs-en' => [1733, 1890],
    'cs-es' => [1734, 1891],
    'cs-fr' => [1735, 1892],
    'cs-ru' => [1736, 1893],
    'ru-de' => [1737],
    'ru-en' => [1738, 1906],
    'ru-es' => [1739],
    'ru-fr' => [1740],
    'ru-cs' => [1741, 1905]
);
my $pair = "$src-$tgt";
confess("Unknown language pair $pair") unless($ids{$pair} && $ids{$pair}[1]);
print STDERR ("Selecting test set and system (probably superfluous operation)...\n");
$response = $ua->get('http://matrix.statmt.org/submission');
$html = $response->content();
$formular = htmlform::precist_formular($html);
print STDERR ("Selecting test set newstest2013 $pair...\n");
$testsetid = 17; # newstest2013
htmlform::nastavit_hodnotu($formular, 'test_set[id]', $testsetid); # newstest2013
htmlform::nastavit_hodnotu($formular, "test_setup[$testsetid]", $ids{$pair}[0]);
$sysname = 'cu-zeman';
print STDERR ("Selecting system $sysname $pair...\n");
htmlform::nastavit_hodnotu($formular, 'system[id]', $ids{$pair}[1]);
$podvoj = htmlform::ziskat_pole_dvojic($formular, 'Continue');
print STDERR ("Posting form data to http://matrix.statmt.org/submission/upload...\n");
$response = htmlform::post($ua, 'http://matrix.statmt.org/submission/upload', $podvoj, 'application/x-www-form-urlencoded');
$response->is_success() or confess();
$html_empty_submission = $response->content();
print STDERR ("Post request suceeded.\n");
print STDERR ("Now the actual SGML files...\n");
# Look for traces of previous submissions of the same experiment.
opendir(DIR, $konfig{step}) or confess("Cannot open folder $konfig{step}: $!");
@files = readdir(DIR);
closedir(DIR);
foreach my $normalized (0, 1)
{
    # Stop immediately if this experiment has already been submitted and not manually marked for resubmission.
    # (You can manually allow resubmission by e.g. renaming the stamp file, appending "-resubmission-ok" or something.)
    if(grep {m/^submitted-\d{14}-$normalized$/} @files)
    {
        confess("The same experiment ($normalized) has already been submitted");
    }
    $formular = htmlform::precist_formular($html_empty_submission);
    htmlform::nastavit_hodnotu($formular, 'run[test_setup_id]', $ids{$pair}[0]);
    htmlform::nastavit_hodnotu($formular, 'run[system_id]', $ids{$pair}[1]);
    my $filerecord = $formular->{hash}{'run[file_sgm]'}[-1];
    $filerecord->{filetype} = 'text/xml';
    if($normalized)
    {
        $filerecord->{filename} = "$konfig{step}/sysout.$tgt.normalized.sgml";
        $filerecord->{value} = dzsys::safeticks("cat $filerecord->{filename}");
        my $notes = "secondary; not for manual evaluation; normalized; constrained; $konfig{step}; $tags";
        $notes .= "; $konfig{notes}" if($konfig{notes});
        $notes .= "; $score" if($score);
        htmlform::nastavit_hodnotu($formular, 'run[notes]', $notes);
    }
    else
    {
        $filerecord->{filename} = "$konfig{step}/sysout.$tgt.sgml";
        $filerecord->{value} = dzsys::safeticks("cat $filerecord->{filename}");
        my $notes = "primary; unnormalized; constrained; $konfig{step}; $tags";
        $notes .= "; $konfig{notes}" if($konfig{notes});
        $notes .= "; $score" if($score);
        htmlform::nastavit_hodnotu($formular, 'run[notes]', $notes);
    }
    $podvoj = htmlform::ziskat_pole_dvojic($formular, 'Save Run');
    print STDERR ("Posting form data to http://matrix.statmt.org/submission/create...\n");
    $response = htmlform::post($ua, 'http://matrix.statmt.org/submission/create', $podvoj, 'multipart/form-data');
    $response->is_success() or $response->status_line() =~ m/^302/ or confess();
    print STDERR ("Post request suceeded.\n");
    # Leave a trace about the submission in the step folder.
    # We can use it to prevent incidential repeated resubmissions.
    my $stamp = 'submitted-'.cas::ted()->{rmdhms}.'-'.$normalized;
    dzsys::saferun("touch $konfig{step}/$stamp") or die;
}
print STDERR ("See http://matrix.statmt.org/runs/list.\n");
