#!/bin/bash
# eman seed for Discriminative Lexicon Model
# extracts features and trains a vw model

function die() { echo "$@" >&2; exit 1; }
set -o pipefail  # safer pipes

PLAYGROUND=`eman path` # eman playground directory

# Ensure all the required variables are set (or provide the default)
eman \
  defvar DLMSTEP_TO_EVAL type=optstep default='' \
    help="set nonempty to evaluate existing model" \
  defvar DLMINIFILE default='' inherit=DLMSTEP_TO_EVAL \
    help="the config file for dlm extractor" \
  defvar CEPTSTEP type=reqstep \
    help="where extracted cepts are" \
  defvar SRCCTXSTEP type=reqstep \
    help="where extracted source contexts are" \
  defvar MOSESSTEP type=reqstep inherit=CEPTSTEP \
    help="the step containing compiled tools" \
  defvar VWSTEP type=reqstep inherit=MOSESSTEP \
    help="the step containing compiled tools" \
  defvar JOBS help='parallelize into how many jobs' default=40 \
  defvar VWPASSES default='10' help="number of passes when training" \
  defvar VWFLAGS default=' --noconstant -b 26 -q st --loss_function logistic ' help="flags to pass to vw on top of DLMINIFILE" \
  defvar EMAN_MEM default='6g' help="memory limit at cluster" \
  defvar EMAN_DISK default='20g' help="required free space at temp" \
  defvar TEMPDIR default='/mnt/h/tmp' help="tempdir" \
|| exit 1

# Set local bash variables
eval `eman bash-loadvars`

PLAYGROUND=`eman path`

BOOSTPATH=`eman getvar $VWSTEP BOOSTPATH`

MOSESSTEPDIR=`eman path $MOSESSTEP`
VWSTEPDIR=`eman path $VWSTEP`
SCRIPTS_ROOTDIR="$MOSESSTEPDIR/moses/scripts"

CEPTSTEPDIR=`eman path $CEPTSTEP`
SRCCTXSTEPDIR=`eman path $SRCCTXSTEP`

if [ -z "$DLMINIFILE" ]; then
  # use the default DLM ini
  DLMINIPATH=$PLAYGROUND/configs/dlm.ini
else
  DLMINIPATH=$DLMINIFILE
fi

# are we training or testing?
if [ -z "$DLMSTEP_TO_EVAL" ]; then
  trainortest=train
  modelusage=f
  EXTRAVWARGS="--passes $VWPASSES"
else
  trainortest=predict
  modelusage=i
  modelpath=`eman path $DLMSTEP_TO_EVAL`/vw-model
  EXTRAVWARGS="--raw_predictions >(gzip -c > raw-predictions.gz)"
fi

# copy args from config file
VWARGS=$(grep "$trainortest *= *" $DLMINIPATH | cut -d= -f2-)
[ -z "$VWARGS" ] \
  && die "Failed to get vw args for $trainortest from $DLMINIPATH"

# normalization=$(grep 'normalization *= *' $DLMINIPATH | cut -d= -f2- | sed 's/ *//g')
# case $normalization in
# logistic_loss_basic) VWLOSSNORM=logistic ;;
# squared_loss) VWLOSSNORM=squared ;;
# *) die "Bad loss normalization: $normalization" ;;
# esac

# Don't continue if we are not preparing the step yet
[ -z "$INIT_ONLY" ] || exit 0

$PLAYGROUND/../scripts/wiseln $DLMINIPATH ./dlm.ini

cat > eman.command << KONEC
#!/bin/bash
echo "=============================="
echo "== Started:   "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
set -o pipefail
set -x
mydir=\$(pwd)
function die() { echo "\$@" >&2 ; eman fail \$mydir ; exit 1 ; }

export SCRIPTS_ROOTDIR=$SCRIPTS_ROOTDIR
echo SCRIPTS_ROOTDIR=$SCRIPTS_ROOTDIR

# Get local versions of the files
$PLAYGROUND/../scripts/wiseln $CEPTSTEPDIR/cept-table.gz ./cept-table.gz
$PLAYGROUND/../scripts/wiseln $CEPTSTEPDIR/extract-file.gz ./extract-file.gz
$PLAYGROUND/../scripts/wiseln $SRCCTXSTEPDIR/corpus.txt.gz \
    ./context-factors-file.gz

[ \$(zcat cept-table.gz | wc -l) -ne 0 ] || die "Empty cept-table.gz"
[ \$(zcat extract-file.gz | wc -l) -ne 0 ] || die "Empty extract-file.gz"
[ \$(zcat context-factors-file.gz | wc -l) -ne 0 ] || die "Empty context-factors-file.gz"

SPLITLINES=\$(( \`zcat extract-file.gz | wc -l\` / $JOBS ))
zcat extract-file.gz | split --suffix-length=3 -l \$SPLITLINES - extract.split.
LD_LIBRARY_PATH=$BOOSTPATH/lib/ $VWSTEPDIR/vowpal_wabbit/bin/spanning_tree || die "Failed to run VW master process"

OUTMODEL="-$modelusage \$mydir/vw-model --save_per_pass "
NODE=0
TOTAL=\`ls extract.split.* | wc -l\`
for part in extract.split.* ; do
  JOBCMD="$MOSESSTEPDIR/moses/bin/extract-dwl \\
    \$part \\
    ./context-factors-file.gz \\
    ./cept-table.gz \\
    ./dlm.ini \\
    $TEMPDIR/\$part.vwinput \\
    $TEMPDIR/\$part.index \\
    && LD_LIBRARY_PATH=$BOOSTPATH/lib/ $VWSTEPDIR/vowpal_wabbit/bin/vw \\
    $VWARGS --initial_t 1 \\
    $VWFLAGS \\
    \$OUTMODEL \\
    $EXTRAVWARGS \\
    --span_server \`hostname\` --unique_id $$ --node \$NODE --total \$TOTAL \\
    --cache_file $TEMPDIR/\$part.cache -d $TEMPDIR/\$part.vwinput ; \\
    rm -f $TEMPDIR/\$part.index $TEMPDIR/\$part.vwinput $TEMPDIR/\$part.cache"

  HOLD="\$HOLD -hold_jid "\$(qsubmit -mem 20g -disk 100g "\$JOBCMD" 2>&1 | grep -o 'job [^ ]*' | cut -d' ' -f2)

  OUTMODEL=""
  NODE=\$(( \$NODE + 1 ))
done

echo -n "#!/bin/bash\\necho" > waiter.sh
chmod +x waiter.sh

qsub -sync yes \$HOLD -j y -o /dev/null -e /dev/null -cwd -S /bin/bash ./waiter.sh

killall spanning_tree || echo "Failed to kill VW master process" >&2

set +x
echo Done.
eman succeed \$mydir
echo "=============================="
echo "== Ended:     "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
KONEC
