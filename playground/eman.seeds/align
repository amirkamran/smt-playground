#!/bin/bash
# eman seed for word alignment

function die() { echo "$@" >&2; exit 1; }
set -o pipefail  # safer pipes

PLAYGROUND=`eman path` # eman playground directory

# Ensure all the required variables are set (or provide the default)
eman \
  defvar GIZASTEP type=reqstep help='where is GIZA/mGIZA and symal compiled' \
  defvar CORPUS help='the corpus name' \
  defvar SRCALIAUG help='lang+factors for the source side' \
  defvar TGTALIAUG help='lang+factors for the target side' \
  defvar ALISYMS default=gdf,revgdf,gdfa,revgdfa,left,right,int,union \
    help='symmetrization methods, several allowed if delimited by comma' \
  defvar ALILABEL default='' \
    help='alignment "corpus" name, generated automatically if not given' \
|| exit 1

# Set local bash variables
eval `eman bash-loadvars`

if [ -z "$ALILABEL" ]; then
  export ALILABEL=$(echo $SRCALIAUG-$TGTALIAUG | tr '+.' '--')
  eman defvar ALILABEL
fi

eman add-tag $CORPUS.$ALILABEL .

GIZAWRAPPER=$PLAYGROUND/../scripts/gizawrapper.pl
[ -x $GIZAWRAPPER ] || die "gizawrapper not found: $GIZAWRAPPER"

# add source and target corpora to deps
srccorpstep=$($PLAYGROUND/corpman --init $CORPUS/$SRCALIAUG | cut -f1)
[ ! -z "$srccorpstep" ] || die "Missing source corpus"
tgtcorpstep=$($PLAYGROUND/corpman --init $CORPUS/$TGTALIAUG | cut -f1)
[ ! -z "$tgtcorpstep" ] || die "Missing target corpus"

eman add-deps . $srccorpstep $tgtcorpstep

# Stop here if we are just initing ourselves
[ -z "$INIT_ONLY" ] || exit 0

# Run checks in the preparation phase
# no checks.

# convert the dependencies to absolute paths
GIZASTEP=`eman path $GIZASTEP`

# Emit the main script to be used in the running phase
cat > eman.command << KONEC
#!/bin/bash
echo "=============================="
echo "== Started:   "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
mydir=\$(pwd)
set -o pipefail
function die() { echo "\$@" >&2 ; eman fail \$mydir ; exit 1 ; }
renice 10 \$\$
ulimit -c 1 # core files limited to 1 byte

export SCRIPTS_ROOTDIR=$GIZASTEP/moses/scripts
echo SCRIPTS_ROOTDIR=\$SCRIPTS_ROOTDIR

function mkcorpus() {
  $PLAYGROUND/corpman --wait \$1 || die "Failed to prepare \$1"
  step_file_col=(\$($PLAYGROUND/corpman \$1))
  if [ "\${step_file_col[2]}" == "-1" ]; then
    $PLAYGROUND/../scripts/wiseln $PLAYGROUND/\${step_file_col[0]}/\${step_file_col[1]} \\
      corpus.\$2.gz \
    || die "Failed to clone \$2 corpus \$1"
  else
    echo "Selecting the column from \$step_file_col"
    eval \$($PLAYGROUND/corpman --cmd \$1) \\
    | gzip -c > corpus.\$2.gz
  fi
}
mkcorpus $CORPUS/$SRCALIAUG src
mkcorpus $CORPUS/$TGTALIAUG tgt

tempdir=/mnt/h/tmp
  # best choice for ufal
[ -d \$tempdir ] || tempdir=/tmp
  # the default

$GIZAWRAPPER \\
  corpus.src.gz corpus.tgt.gz \\
  --lfactors=0 --rfactors=0 \\
  --tempdir=\$tempdir \\
  --bindir=$GIZASTEP/bin \\
  --dirsym=$ALISYMS \\
  --drop-bad-lines \\
| gzip -c > alignment.gz \
|| die "Failed to align the corpus"

alilen=\`zcat alignment.gz | wc -l\`
srclen=\`zcat corpus.src.gz | wc -l\`
[ \$alilen == \$srclen ] \
  || die "Mismatched file lengths: ali \$alilen, src \$srclen"
  

echo "Aligned, now create corpman info."
i=1
for s in $(echo $ALISYMS | tr , ' '); do \\
  $PLAYGROUND/corpman register -- alignment.gz \$i $CORPUS \$s-$ALILABEL ali \$srclen \\
  || die "Failed to register corpus"
  i=\$((\$i+1))
done
rm $PLAYGROUND/corpman.index # force to reindex

# Standard command footer
echo Done.
eman succeed \$mydir
echo "=============================="
echo "== Ended:     "\`date '+%Y%m%d-%H%M'\`
echo "== Hostname:  "\`hostname\`
echo "== Directory: "\`pwd\`
echo "=============================="
KONEC
